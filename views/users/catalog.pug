extends ../base.pug

block content
  .container(id='catalogContent')
    p
      label(for='new-book') Add Book
      input#new-book(type='text')
      button Add
    h3 Books
    ul#booksList
      li
        label Harry Potter
        input(type='text')
        button.edit Edit
        button.delete Delete
    script.
      
      // if class of the parent is .editMode
      if (containsClass) {
      //Switch from .editMode
      //label text become the input's value
      label.innerText = editInput.value;
      } else {
      //Switch to .editMode
      //input value becomes the labels text
      editInput.value = label.innerText;
      }
      //Toggle .editMode on the parent
      listItem.classList.toggle("editMode");
      }
      //Delete an existing book
      var deleteBook = function () {
      console.log("Delete Book...");
      //Remove the parent list item from the ul
      var listItem = this.parentNode;
      var ul = listItem.parentNode;
      ul.removeChild(listItem);
      }
      //Mark a book as complete
      var bookCompleted = function() {
      console.log("Book Complete...");
      var listItem = this.parentNode;
      completedBooksHolder.appendChild(listItem);
      bindBookEvents(listItem, bookIncomplete);
      }
      //Mark a book as incomplete
      var bookIncomplete = function() {
      console.log("Book Incomplete...");
      var listItem = this.parentNode;
      booksHolder.appendChild(listItem);
      bindBookEvents(listItem, bookCompleted);
      }
      //Set the click handler to the addBook function
      addButton.addEventListener("click", addBook);
      var bindBookEvents = function(bookListItem, checkBoxEventHandler) {
      console.log("Bind List item events");
      // select listitems chidlren
      var checkBox = bookListItem.querySelector('input[type="checkbox"]');
      var editButton = bookListItem.querySelector("button.edit");
      var deleteButton = bookListItem.querySelector("button.delete");
      //bind editBook to edit button
      editButton.onclick = editBook;
      //bind deleteBook to delete button
      deleteButton.onclick = deleteBook;
      }
      //cycle over incompleteBookHolder ul list items
      for (var i = 0; i < booksHolder.children.length; i ++) {
      //bind events to list item's children (bookCompleted)
      bindBookEvents(booksHolder.children[i], bookCompleted);
      }
